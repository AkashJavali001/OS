#include<stdio.h>

#define MAX_BLOCKS 25
#define MAX_FILES 25

void bestFit(int blocks[], int files[], int nb, int nf) {
    int frag[MAX_FILES], bf[MAX_BLOCKS] = {0}, ff[MAX_FILES] = {0};

    for (int i = 0; i < nf; i++) {
        int lowest = 1000, temp = 0;

        for (int j = 0; j < nb; j++) {
            if (bf[j] != 1) {
                temp = blocks[j] - files[i];
                if (temp >= 0 && lowest > temp) {
                    ff[i] = j;
                    lowest = temp;
                }
            }
        }

        frag[i] = lowest;
        bf[ff[i]] = 1;
    }

    printf("\nFile_no:\tFile_size:\tBlock_no:\tBlock_size:\tFragment\n");
    for (int i = 0; i < nf && ff[i] != 0; i++)
        printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\n", i + 1, files[i], ff[i] + 1, blocks[ff[i]], frag[i]);
}

int main() {
    int blocks[MAX_BLOCKS], files[MAX_FILES];
    int nb, nf;

    printf("BEST FIT\n");
    printf("Enter the number of blocks: ");
    scanf("%d", &nb);

    printf("Enter the number of files: ");
    scanf("%d", &nf);

    printf("Enter the size of the blocks:\n");
    for (int i = 0; i < nb; i++) {
        printf("Block %d: ", i + 1);
        scanf("%d", &blocks[i]);
    }

    printf("Enter the size of the files:\n");
    for (int i = 0; i < nf; i++) {
        printf("File %d: ", i + 1);
        scanf("%d", &files[i]);
    }

    bestFit(blocks, files, nb, nf);

    return 0;
}
